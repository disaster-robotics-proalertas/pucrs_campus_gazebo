Pyson AgentSpeak plans

In this folder are placed the plans for all the agents that will be part of the disaster scenario. The agents are separated in two classes: delivery agents and building agents.

	- Building agents:
		This class of agents has three agent types: collect point, rescue point and hospital.
			
			- Rescue Point: This agent will be responsible to request supplies to its victims or request a transportation of a victim to the hospital. When the system is started, this agent will request immediately a new item (a supply or a victim transportation). To determine which item should be requested, an aleatory number from 0 to 1 is generated, as below:
				- 0 to 0.17: Medicines;
				- 0.17 to 0.34: Food;
				- 0.34 to 0.51: Water;
				- 0.51 to 0.68: Blankets;
				- 0.68 to 0.85: Curatives;
				- 0.85 to 1: Victim transportation;

			- Collect point: This agent will be responsible only to provide the supplies to the delivery agents.

			- Hospital: This agent will be responsible only to receive the victims.

		When the system is started all of these three class of agents send a broadcast to the other agents through the "receiveBuildingPose" belief.
		PS: The collect point and hospital may seem like simple agents, but it was important to create their plans to provide their positions to the another agents.

 	- Delivery agents:
 		This class of agents has two agent types: ambulance and delivery agent. 

 			- Ambulance: The ambulance agent is responsible to transport a victim from a rescue point to the hospital.

 			- Delivery agent: The delivery agent is responsible to collect the requested supplies and delivers to the requestor.

		These two classes of agents have a belief called "execute(X, Y)" that must be used to the JASON notify the agent that its position has been changed and it must execute its plans.
		The Pyson must provide a custom action "go_to(X, Y)" to be used when the agent identifies that should be moved in the map, where the X and Y variables are the coordinates.
		When a new request is available, the agent notifies the other agents with the same type (ambulance or delivery agent) that it will attend the request. The agent with minor name has priority to acept the request, e.g., the agent ambulance1 has priority about the agent ambulance2 or the agent deliveryAgent1 has priority about the agent deliveryAgent2.
		When a request is completed, all agents with the same type are notified and must remove the request from their belief base.

All of the agents described here must be instantiated in the .py file with a initial belief "pose(X,Y)", where must be provide their pose. 

The example.py file has an example of use of Pyson with the agents modeled in this scenario.